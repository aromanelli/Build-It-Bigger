// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {

        classpath 'com.android.tools.build:gradle:3.3.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        // https://github.com/GoogleCloudPlatform/endpoints-framework-gradle-plugin/blob/master/ANDROID_README.md
        // https://discuss.gradle.org/t/version-is-root-build-gradle-buildscript-is-overriding-subproject-buildscript-dependency-versions/20746/2
        classpath 'com.google.cloud.tools:endpoints-framework-gradle-plugin:2.0.0'
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.5'

        // https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j
        // https://stackoverflow.com/a/51235096/435519
        // https://issuetracker.google.com/u/1/issues/72872257
        // (Only needed when trying to use gradle from terminal with > 1.8 JDK
//        classpath 'javax.xml.bind:jaxb-api:2.3.0'
//        classpath 'com.sun.xml.bind:jaxb-core:2.3.0'
//        classpath 'com.sun.xml.bind:jaxb-impl:2.3.0'
//        classpath 'javax.activation:activation:1.1.1'

    }
}

plugins {
    // https://github.com/ben-manes/gradle-versions-plugin
    // https://dev.jlelse.de/posts/gradle-dependency-updates/
    id 'com.github.ben-manes.versions' version '0.20.0'
}

configurations {
    // https://docs.gradle.org/current/userguide/customizing_dependency_resolution_behavior.html#sec:component_selection_rules
    rejectConfig {
        dependencyUpdates.resolutionStrategy {
            componentSelection { rules ->
                rules.all { ComponentSelection selection ->
                    boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                    }
                    if (rejected) {
                        selection.reject('Release candidate')
                    }
                }
            }
        }
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}
